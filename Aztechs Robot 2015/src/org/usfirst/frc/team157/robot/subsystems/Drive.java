// RobotBuilder Version: 1.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.

package org.usfirst.frc.team157.robot.subsystems;

import org.usfirst.frc.team157.robot.RobotMap;
import org.usfirst.frc.team157.robot.commands.OperatorDrive;
import edu.wpi.first.wpilibj.CANJaguar;
import edu.wpi.first.wpilibj.command.Subsystem;

/**
 *
 */
public class Drive extends Subsystem
{
	// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
	CANJaguar leftJag1 = RobotMap.driveLeftJag1;
	CANJaguar leftJag2 = RobotMap.driveLeftJag2;
	CANJaguar rightJag1 = RobotMap.driveRightJag1;
	CANJaguar rightJag2 = RobotMap.driveRightJag2;
	
	// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
	
	// Put methods for controlling this subsystem
	// here. Call these from Commands.
	
	@Override
	public void initDefaultCommand()
	{
		// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND
		// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND
		
		setDefaultCommand(new OperatorDrive());
		
		// Set the default command for a subsystem here.
		// setDefaultCommand(new MySpecialCommand());
	}
	
	public void tankDrive(double left, double right)
	{
		// checkAndFixMotors();
		// System.out.println(left + " - " + right);
		byte group = 22;
		
		RobotMap.driveLeftJag1.set(left, group);
		RobotMap.driveLeftJag2.set(left, group);
		RobotMap.driveRightJag1.set(right, group);
		RobotMap.driveRightJag2.set(right, group);
		
		CANJaguar.updateSyncGroup(group);
	}
}
