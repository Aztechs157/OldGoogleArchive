// RobotBuilder Version: 1.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.

package org.usfirst.frc.team157.robot.subsystems;

import org.usfirst.frc.team157.robot.RobotMap;
import org.usfirst.frc.team157.robot.ScaledCANJaguar;
import org.usfirst.frc.team157.robot.commands.OperatorDrive;
import edu.wpi.first.wpilibj.command.Subsystem;

/**
 *
 */
public class Drive extends Subsystem
{
	// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
	ScaledCANJaguar leftJag1 = RobotMap.driveLeftJag1;
	ScaledCANJaguar leftJag2 = RobotMap.driveLeftJag2;
	ScaledCANJaguar rightJag1 = RobotMap.driveRightJag1;
	ScaledCANJaguar rightJag2 = RobotMap.driveRightJag2;
	
	// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
	
	// Put methods for controlling this subsystem
	// here. Call these from Commands.
	
	@Override
	public void initDefaultCommand()
	{
		// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND
		// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND
		
		setDefaultCommand(new OperatorDrive());
		
		// Set the default command for a subsystem here.
		// setDefaultCommand(new MySpecialCommand());
	}
	
	public void tankDrive(double left, double right)
	{
		// checkAndFixMotors();
		// System.out.println(left + " - " + right);
		byte group = 22;
		
		if (!RobotMap.TEST_MODE)
		{
			if (leftJag1 != null)
				leftJag1.set(left, group);
			else
				System.out.println("Drive Left Jag 1 is null!");
			
			if (leftJag2 != null)
				leftJag2.set(left, group);
			else
				System.out.println("Drive Left Jag 2 is null!");
			
			if (rightJag1 != null)
				rightJag1.set(right, group);
			else
				System.out.println("Drive Right Jag 1 is null!");
			
			if (rightJag2 != null)
				rightJag2.set(right, group);
			else
			{
				// System.out.println("Drive Right Jag 2 is null!");
			}
			
			// System.out.println("LEFT = " + left + ", RIGHT = " + right);
			ScaledCANJaguar.updateSyncGroup(group);
		}
	}
}
