// RobotBuilder Version: 0.0.2
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in th future.


package org.usfirst.frc157.qEncoder.subsystems;

import edu.wpi.first.wpilibj.CANJaguar;
import org.usfirst.frc157.qEncoder.RobotMap;
import org.usfirst.frc157.qEncoder.commands.*;
import edu.wpi.first.wpilibj.can.*;

import edu.wpi.first.wpilibj.command.Subsystem;


/**
 *
 */
public class EncJag extends Subsystem {
    
    public static int target;
    
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    CANJaguar rRMotorDrive = RobotMap.encJagRRMotorDrive;
    CANJaguar rFMotorDrive = RobotMap.encJagRFMotorDrive;
    CANJaguar lRMotorDrive = RobotMap.encJagLRMotorDrive;
    CANJaguar lFMotorDrive = RobotMap.encJagLFMotorDrive;
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS

    
    // Put methods for controlling this subsystem
    // here. Call these from Commands.

    public void initDefaultCommand() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND
        // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND
	
        // Set the default command for a subsystem here.
        //setDefaultCommand(new MySpecialCommand());
    }
    
    public void setPositionMode()
    {
//        try
//        {
//            rRMotorDrive.changeControlMode(CANJaguar.ControlMode.kPosition);
//            rRMotorDrive.setPositionReference(CANJaguar.PositionReference.kQuadEncoder);
//            rRMotorDrive.setPositionReference(CANJaguar.PositionReference.kQuadEncoder);
//        }
//        catch (CANTimeoutException ex) {
//            System.out.println("Exception while setting rR to position...");
//        }
    }
    
    public void go()
    {        
        System.out.println("SimpleMotor.go()");
        try 
        {
          rRMotorDrive.setX(-1.0); 
          rFMotorDrive.setX(-1.0); 
          lRMotorDrive.setX(-1.0); 
          lFMotorDrive.setX(-1.0); 
        }
        catch (Exception all) {
            System.out.println("*** SimpleMotor.go() OOPS!");
        }
    }
    public void setSpeed(double speed)
    {
        try 
        {
            byte syncGroup = 0x5A;
            rRMotorDrive.setX(speed, syncGroup);
            rFMotorDrive.setX(speed, syncGroup);
            lRMotorDrive.setX(speed, syncGroup);
            lFMotorDrive.setX(-speed, syncGroup);
            CANJaguar.updateSyncGroup(syncGroup);
        }
        catch (Exception all) {
            System.out.println("*** SimpleMotor.setSpeed() OOPS!");
        }
    }
    
    public void stop()
    {
        System.out.println("SimpleMotor.stop()");
        try 
        {
          rRMotorDrive.setX(0); 
          rFMotorDrive.setX(0); 
          lRMotorDrive.setX(0); 
          lFMotorDrive.setX(0); 
        }
        catch (Exception all) {
            System.out.println("*** SimpleMotor.stop() OOPS!");
        }
    }

}

