// RobotBuilder Version: 1.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.

package org.usfirst.frc.team157.robot.subsystems;

import org.usfirst.frc.team157.robot.Robot;
import org.usfirst.frc.team157.robot.RobotMap;
import edu.wpi.first.wpilibj.AnalogPotentiometer;
import edu.wpi.first.wpilibj.CANJaguar;
import edu.wpi.first.wpilibj.DigitalInput;
import edu.wpi.first.wpilibj.Jaguar;
import edu.wpi.first.wpilibj.command.Subsystem;

/**
 *
 */
public class MotorSubsystem extends Subsystem
{
	// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
	
	public CANJaguar jag1;
	public Jaguar jag2;
	public DigitalInput limSwitch;
	public AnalogPotentiometer pot;
	
	// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
	
	// Put methods for controlling this subsystem
	// here. Call these from Commands.
	public void initDefaultCommand()
	{
		// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND
		// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND
		
		// Set the default command for a subsystem here.
		// setDefaultCommand(new MySpecialCommand());\
		
		jag1 = new CANJaguar(RobotMap.motorSubsystemCANJaguar1ID);
		Robot.setupJagForVoltageControl(jag1);
		
		// jag2 = new Jaguar(RobotMap.motorSubsystemPWMJaguar1ID);
		limSwitch = new DigitalInput(RobotMap.DIGITAL_PORT_LimSwitch);
		pot = new AnalogPotentiometer(RobotMap.ANALOG_PORT_Pot);
	}
	
	public void setCANJagVoltage(double voltage)
	{
		// System.out.println(left + " - " + right);
		if (null != jag1)
		{
			jag1.set(voltage);
		}
	}
	
	public void setPWMJagSpeed(double speed)
	{
		jag2.set(speed);
		System.out.println("Speed set to: " + speed);
	}
	
	public String getLimSwitchPos()
	{
		if (limSwitch == null)
			return "Not Initialized Yet!";
		else if (!limSwitch.get())
			return "Limit Switch is Closed";
		else
			return "Limit Switch is Open";
	}
	
	public double getPotVoltage()
	{
		return pot.get();
	}
}
