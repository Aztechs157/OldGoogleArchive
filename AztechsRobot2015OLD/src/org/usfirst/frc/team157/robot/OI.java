// RobotBuilder Version: 1.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.

package org.usfirst.frc.team157.robot;

import org.usfirst.frc.team157.robot.HomeSensor.Zone;
import org.usfirst.frc.team157.robot.commands.AutonomousCommand;
import org.usfirst.frc.team157.robot.commands.HomeFork;
import org.usfirst.frc.team157.robot.commands.OperatorDrive;
import org.usfirst.frc.team157.robot.commands.TestCommand;
import edu.wpi.first.wpilibj.Joystick;
import edu.wpi.first.wpilibj.buttons.JoystickButton;
import edu.wpi.first.wpilibj.smartdashboard.SmartDashboard;

/**
 * This class is the glue that binds the controls on the physical operator
 * interface to the commands and command groups that allow control of the robot.
 *
 * @author Teju Nareddy
 */
public class OI
{
	// Joysticks
	private Joystick leftJoystick;
	private Joystick rightJoystick;

	// Buttons
	private JoystickButton driverLeftButtonTrigger; // Button 1 - Trigger
	private JoystickButton driverLeftButton5; // Button 11 - Trigger

	public OI()
	{
		// Instantiate Joysticks
		rightJoystick = new Joystick(1);
		leftJoystick = new Joystick(0);

		// Instantiate Buttons
		driverLeftButtonTrigger = new JoystickButton(leftJoystick, 1); // Button 1 - Trigger
		driverLeftButton5 = new JoystickButton(leftJoystick, 5); // Button 1 - Trigger

		// Tie commands to each button
		driverLeftButtonTrigger.whenPressed(new HomeFork(Zone.ZONE_B));
		driverLeftButton5.whenPressed(new TestCommand());

		// SmartDashboard Buttons
		SmartDashboard.putData("Autonomous Command", new AutonomousCommand());
		SmartDashboard.putData("Operator Drive", new OperatorDrive());
	}

	public Joystick getLeftJoystick()
	{
		return leftJoystick;
	}

	public Joystick getRightJoystick()
	{
		return rightJoystick;
	}
}
