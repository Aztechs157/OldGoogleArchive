// RobotBuilder Version: 0.0.2
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in th future.
package org.usfirst.frc157.BuiltRobot;
import edu.wpi.first.wpilibj.AnalogChannel;
import org.usfirst.frc157.BuiltRobot.commands.*;
import org.usfirst.frc157.BuiltRobot.LogitechController;
import org.usfirst.frc157.BuiltRobot.LogitechControllerButton;
import org.usfirst.frc157.BuiltRobot.commands.*;
import edu.wpi.first.wpilibj.smartdashboard.SmartDashboard;
/** 
 * This class is the glue that binds the controls on the physical operator
 * interface to the commands and command groups that allow control of the robot.
 */
public class OI {
    //// CREATING BUTTONS
    public static final int kLogitechFirstPort = 1;
    public static final int kPotPort = 2;
    
    private LogitechController m_FirstGamePad;
    // Trigger Buttons (at index fingers)
    private LogitechControllerButton m_setFirst_LeftShoulderButton;
    private LogitechControllerButton m_setFirst_LeftTrigger;
    private LogitechControllerButton m_setFirst_RightShoulderButton;
    private LogitechControllerButton m_setFirst_RightTrigger;
    // Gamepad
    private LogitechControllerButton m_setFirst_GamepadLeft;
    private LogitechControllerButton m_setFirst_GamepadRight;
    private LogitechControllerButton m_setFirst_GamepadUp;
    private LogitechControllerButton m_setFirst_GamepadDown;
    // X,Y,A,B Buttons
    private LogitechControllerButton m_setFirst_X;
    private LogitechControllerButton m_setFirst_Y;
    private LogitechControllerButton m_setFirst_A;
    private LogitechControllerButton m_setFirst_B;
    // Start/Back Buttoins
    private LogitechControllerButton m_setFirst_Start;
    private LogitechControllerButton m_setFirst_Back;
    // Stick Buttons (Push down on stick)
    private LogitechControllerButton m_setFirst_LeftStickButton;
    private LogitechControllerButton m_setFirst_RightStickButton;
    
    private AnalogChannel m_pot;
   
    // One type of button is a joystick button which is any button on a joystick.
    // You create one by telling it which joystick it's on and which button
    // number it is.
    // Joystick stick = new Joystick(port);
    // Button button = new JoystickButton(stick, buttonNumber);
    
    // Another type of button you can create is a DigitalIOButton, which is
    // a button or switch hooked up to the cypress module. These are useful if
    // you want to build a customized operator interface.
    // Button button = new DigitalIOButton(1);
    
    // There are a few additional built in buttons you can use. Additionally,
    // by subclassing Button you can create custom triggers and bind those to
    // commands the same as any other Button.
    
    //// TRIGGERING COMMANDS WITH BUTTONS
    // Once you have a button, it's trivial to bind it to a button in one of
    // three ways:
    
    // Start the command when the button is pressed and let it run the command
    // until it is finished as determined by it's isFinished method.
    // button.whenPressed(new ExampleCommand());
    
    // Run the command while the button is being held down and interrupt it once
    // the button is released.
    // button.whileHeld(new ExampleCommand());
    
    // Start the command when the button is released  and let it run the command
    // until it is finished as determined by it's isFinished method.
    // button.whenReleased(new ExampleCommand());
    
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    public OI() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
	    
        // SmartDashboard Buttons
        SmartDashboard.putData("MotorGo", new MotorGo());
        SmartDashboard.putData("Autonomous Command", new AutonomousCommand());
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
        
    // Create the Controller
    m_FirstGamePad = new LogitechController(kLogitechFirstPort);
    // Create the Buttons
    // Trigger Buttons (at index fingers)
    m_setFirst_LeftShoulderButton  = new LogitechControllerButton(m_FirstGamePad, LogitechController.ButtonType.kButtonLeftB.value);
    m_setFirst_LeftTrigger         = new LogitechControllerButton(m_FirstGamePad, LogitechController.ButtonType.kButtonLeftTrigger.value);
    m_setFirst_RightShoulderButton = new LogitechControllerButton(m_FirstGamePad, LogitechController.ButtonType.kButtonRightB.value);
    m_setFirst_RightTrigger        = new LogitechControllerButton(m_FirstGamePad, LogitechController.ButtonType.kButtonRightTrigger.value);
    // Gamepad
    m_setFirst_GamepadLeft         = new LogitechControllerButton(m_FirstGamePad, LogitechController.ButtonType.kButtonGameLeft.value);
    m_setFirst_GamepadRight        = new LogitechControllerButton(m_FirstGamePad, LogitechController.ButtonType.kButtonGameRight.value);
    m_setFirst_GamepadUp           = new LogitechControllerButton(m_FirstGamePad, LogitechController.ButtonType.kButtonGameUp.value);
    m_setFirst_GamepadDown         = new LogitechControllerButton(m_FirstGamePad, LogitechController.ButtonType.kButtonGameDown.value);
    // X,Y,A,B Buttons
    m_setFirst_X                   = new LogitechControllerButton(m_FirstGamePad, LogitechController.ButtonType.kButtonX.value);
    m_setFirst_Y                   = new LogitechControllerButton(m_FirstGamePad, LogitechController.ButtonType.kButtonY .value);
    m_setFirst_A                   = new LogitechControllerButton(m_FirstGamePad, LogitechController.ButtonType.kButtonA.value);
    m_setFirst_B                   = new LogitechControllerButton(m_FirstGamePad, LogitechController.ButtonType.kButtonB.value);
    // Start/Back Buttoins
    m_setFirst_Start               = new LogitechControllerButton(m_FirstGamePad, LogitechController.ButtonType.kButtonStart.value);
    m_setFirst_Back                = new LogitechControllerButton(m_FirstGamePad, LogitechController.ButtonType.kButtonBack.value);
    // Stick Buttons (Push down on stick)
    m_setFirst_LeftStickButton     = new LogitechControllerButton(m_FirstGamePad, LogitechController.ButtonType.kButtonLeftTop.value);
    m_setFirst_RightStickButton    = new LogitechControllerButton(m_FirstGamePad, LogitechController.ButtonType.kButtonRightTop.value);
    
    m_pot = new AnalogChannel(kPotPort);
    
    // Associate the Buttons with Commands
    m_setFirst_LeftShoulderButton.whenPressed(new PrintMessage("Button <m_setFirst_LeftShoulderButton> pressed\n"));
    m_setFirst_LeftTrigger.whenPressed(new PrintMessage("Button <m_setFirst_LeftTrigger> pressed\n"));
    m_setFirst_RightShoulderButton.whenPressed(new PrintMessage("Button <m_setFirst_RightShoulderButton> pressed\n"));
    m_setFirst_RightTrigger.whenPressed(new PrintMessage("Button <m_setFirst_RightTrigger> pressed\n"));
    // Gamepad
    m_setFirst_GamepadLeft.whenPressed(new PrintMessage("Button <m_setFirst_GamepadLeft> pressed\n"));
    m_setFirst_GamepadRight.whenPressed(new PrintMessage("Button <m_setFirst_GamepadRight> pressed\n"));
    m_setFirst_GamepadUp.whenPressed(new PrintMessage("Button <m_setFirst_GamepadUp> pressed\n"));
    m_setFirst_GamepadDown.whenPressed(new PrintMessage("Button <m_setFirst_GamepadDown> pressed\n"));
    // X,Y,A,B Buttons
    m_setFirst_X.whenPressed(new PrintMessage("Button <m_setFirst_X> pressed\n"));
    m_setFirst_Y.whenPressed(new PrintMessage("Button <m_setFirst_Y> pressed\n"));
    m_setFirst_A.whenPressed(new PrintMessage("Button <m_setFirst_A> pressed\n"));
    m_setFirst_B.whenPressed(new PrintMessage("Button <m_setFirst_B> pressed\n"));
    // Start/Back Buttoins
    m_setFirst_Start.whenPressed(new PrintMessage("Button <m_setFirst_Start> pressed\n"));
    m_setFirst_Back.whenPressed(new PrintMessage("Button <m_setFirst_Back> pressed\n"));
    // Stick Buttons (Push down on stick)
    m_setFirst_LeftStickButton.whenPressed(new PrintMessage("Button <m_setFirst_LeftStickButton> pressed\n"));
    m_setFirst_RightStickButton.whenPressed(new PrintMessage("Button <m_setFirst_RightStickButton> pressed\n"));
       
    // Associate the Buttons with Commands (usually pressed is sufficient, but we'll do released here too...)
    m_setFirst_LeftShoulderButton.whenReleased(new PrintMessage("Button <m_setFirst_LeftShoulderButton> released\n"));
    m_setFirst_LeftTrigger.whenReleased(new PrintMessage("Button <m_setFirst_LeftTrigger> released\n"));
    m_setFirst_RightShoulderButton.whenReleased(new PrintMessage("Button <m_setFirst_RightShoulderButton> released\n"));
    m_setFirst_RightTrigger.whenReleased(new PrintMessage("Button <m_setFirst_RightTrigger> released\n"));
    // Gamepad
    m_setFirst_GamepadLeft.whenReleased(new PrintMessage("Button <m_setFirst_GamepadLeft> released\n"));
    m_setFirst_GamepadRight.whenReleased(new PrintMessage("Button <m_setFirst_GamepadRight> released\n"));
    m_setFirst_GamepadUp.whenReleased(new PrintMessage("Button <m_setFirst_GamepadUp> released\n"));
    m_setFirst_GamepadDown.whenReleased(new PrintMessage("Button <m_setFirst_GamepadDown> released\n"));
    // X,Y,A,B Buttons
    m_setFirst_X.whenReleased(new PrintMessage("Button <m_setFirst_X> released\n"));
    m_setFirst_Y.whenReleased(new PrintMessage("Button <m_setFirst_Y> released\n"));
    m_setFirst_A.whenReleased(new PrintMessage("Button <m_setFirst_A> released\n"));
    m_setFirst_B.whenReleased(new PrintMessage("Button <m_setFirst_B> released\n"));
    // Start/Back Buttoins
    m_setFirst_Start.whenReleased(new PrintMessage("Button <m_setFirst_Start> released\n"));
    m_setFirst_Back.whenReleased(new PrintMessage("Button <m_setFirst_Back> released\n"));
    // Stick Buttons (Push down on stick)
    m_setFirst_LeftStickButton.whenReleased(new PrintMessage("Button <m_setFirst_LeftStickButton> released\n"));
    m_setFirst_RightStickButton.whenReleased(new PrintMessage("Button <m_setFirst_RightStickButton> released\n"));
    
    }
    
    public LogitechController getFirstController()
    {
    return m_FirstGamePad;
    }
    
    public AnalogChannel getPot()
    {
        return m_pot;
    }
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=FUNCTIONS
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=FUNCTIONS
}
