package edu.wpi.first.wpilibj.templates;

import edu.wpi.first.wpilibj.CANJaguar;
import edu.wpi.first.wpilibj.RobotDrive;
import edu.wpi.first.wpilibj.can.CANTimeoutException;

/**
 * The RobotMap is a mapping from the ports sensors and actuators are wired into
 * to a variable name. This provides flexibility changing wiring, makes checking
 * the wiring easier and significantly reduces the number of magic numbers
 * floating around.
 */
public class RobotMap {
    // For example to map the left and right motors, you could define the
    // following variables to use with your drivetrain subsystem.
    // public static final int leftMotor = 1;
    // public static final int rightMotor = 2;

    // If you are using multiple modules, make sure to define both the port
    // number and the module. For example you with a rangefinder:
    // public static final int rangefinderPort = 1;
    // public static final int rangefinderModule = 1;
    private static int FrontLeftMotorID = 7;
    private static int FrontRightMotorID = 6;
    private static int RearLeftMotorID = 4;
    private static int RearRightMotorID = 5;
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    public static CANJaguar simpleMotorCimJag;
    public static CANJaguar driveDriveFL;
    public static CANJaguar driveDriveFR;
    public static CANJaguar driveDriveRL;
    public static CANJaguar driveDriveRR;
    public static RobotDrive driveMechanumDrive;
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    public static CANJaguar simpleMotorWinJag;

    public static void init() {

        try {
            driveDriveFL = new CANJaguar(FrontLeftMotorID);
        } catch (CANTimeoutException ex) {
            System.out.println("FAIL - Instantiating FL JAG " + FrontLeftMotorID);
            ex.printStackTrace();
        }

        try {
            driveDriveFR = new CANJaguar(FrontRightMotorID);
        } catch (CANTimeoutException ex) {
            System.out.println("FAIL - Instantiating FR JAG " + FrontRightMotorID);
            ex.printStackTrace();
        }

        try {
            driveDriveRL = new CANJaguar(RearLeftMotorID);
        } catch (CANTimeoutException ex) {
            System.out.println("FAIL - Instantiating RL JAG " + RearLeftMotorID);
            ex.printStackTrace();
        }


        try {
            driveDriveRR = new CANJaguar(RearRightMotorID);
        } catch (CANTimeoutException ex) {
            System.out.println("FAIL - Instantiating RR JAG " + RearRightMotorID);
            ex.printStackTrace();
        }
        try {
            driveMechanumDrive = new RobotDrive(driveDriveFL, driveDriveRL, driveDriveFR, driveDriveRR);
        } catch (Exception e) {
            System.out.println("Can't get mech drive going...  FAIL");
        }

        if (driveMechanumDrive == null) {
            System.out.println("MD = NULL");
        }

        try {
            driveMechanumDrive.setSafetyEnabled(false);
            driveMechanumDrive.setExpiration(4.0);
            driveMechanumDrive.setSensitivity(0.5);
            driveMechanumDrive.setMaxOutput(1.0);
        } catch (Exception e) {
            System.out.println("Can't configure mech drive ...  FAIL");
        }

    }
}
