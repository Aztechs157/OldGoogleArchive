// RobotBuilder Version: 0.0.2
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in th future.


package org.usfirst.frc157.TestAztechs2014.commands;

import edu.wpi.first.wpilibj.command.Command;
import edu.wpi.first.wpilibj.smartdashboard.SmartDashboard;
import org.usfirst.frc157.TestAztechs2014.LogitechController;
import org.usfirst.frc157.TestAztechs2014.Robot;
import org.usfirst.frc157.TestAztechs2014.RobotMap;

/**
 *
 */
public class Move extends Command {

    public boolean first = true;
    
    public Move() {
        // Use requires() here to declare subsystem dependencies
        // eg. requires(chassis);
	
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
        requires(Robot.drive);
        // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
    }

    // Called just before this Command runs the first time
    protected void initialize() {
        Robot.drive.setupJagForVoltageControl(RobotMap.driveBackLeftSpeedController);
        Robot.drive.setupJagForVoltageControl(RobotMap.driveBackRightSpeedController);
        Robot.drive.setupJagForVoltageControl(RobotMap.driveFrontLeftSpeedController);
        Robot.drive.setupJagForVoltageControl(RobotMap.driveFrontRightSpeedController);
    }

    // Called repeatedly when this Command is scheduled to run
    protected void execute() {
        LogitechController logitech = Robot.oi.getController();
        
        //System.out.println("Left: " + logitech.getButtonLeftTrigger());
        //System.out.println("Right: " + logitech.getButtonRightTrigger());
               
        double leftSpeed = -logitech.getLeftY();
        double rightSpeed = logitech.getRightY();
        Robot.drive.drive(leftSpeed, rightSpeed);
        SmartDashboard.putNumber("Left Speed", leftSpeed);
        SmartDashboard.putNumber("Right Speed", rightSpeed);
     System.out.println("leftSpeed: " + leftSpeed + ", rightSpeed: " + rightSpeed);
    }

    // Make this return true when this Command no longer needs to run execute()
    protected boolean isFinished() {
        return false;
    }

    // Called once after isFinished returns true
    protected void end() {
    }

    // Called when another command which requires one or more of the same
    // subsystems is scheduled to run
    protected void interrupted() {
    }
}


